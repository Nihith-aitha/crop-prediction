# -*- coding: utf-8 -*-
"""crop.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DS7D_r7HbspLV_5vJNQn-64YhVupFdBN
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

crop = pd.read_csv("/content/Crop_recommendation.csv")

crop.head()

# returns last 5 rows
crop.tail()

#shape - returns rows and columns
crop.shape

#returns info of dataset
crop.info()

#check for missing value
crop.isnull()

#returns the sum of missing values
crop.isnull().sum()

#check for duplicates values
crop.duplicated()

#To check the statistics of the dataset
crop.describe()

#shows all the columns
crop.columns

#check feature of specific columns
crop['label'].value_counts()

#removing a features from the table
features = crop.columns.to_list()
features.remove('label')
print(features)

#visualize  the distribution of each feature

import seaborn as sns
fig ,ax = plt.subplots(3,3,figsize=(15,15))
for i, subplot in zip(features,ax.flatten()):
  sns.histplot(crop[i],ax=subplot,kde=True)
  subplot.set_title(i)
plt.tight_layout()
plt.show()

#plotting scatter plot
import seaborn as sns
fig ,ax = plt.subplots(3,3,figsize=(15,15))
for i, subplot in zip(features,ax.flatten()):
  sns.scatterplot(x=i,y='label',data=crop,ax=subplot)
plt.tight_layout()
plt.show()

#finding outliers-boxplot
import seaborn as sns
fig ,ax = plt.subplots(3,3,figsize=(15,15))
for i, subplot in zip(features,ax.flatten()):
    sns.boxplot(x=i,data=crop,ax=subplot)
plt.tight_layout()
plt.show()

#corelation of features
num_cols = crop.select_dtypes(include=[np.number])
num_cols

corr = num_cols.corr()
corr

#visualizing with heatmap
sns.heatmap(corr,annot=True,cmap='coolwarm')
plt.show()

"""# **ENCODING**"""

crop['label'].unique()

crop_dict = {'rice': 1, 'maize': 2, 'chickpea': 3, 'kidneybeans' : 4, 'pigeonpeas': 5,
       'mothbeans' :6, 'mungbean' :7, 'blackgram' :8, 'lentil' :9, 'pomegranate':10,
       'banana' :11, 'mango' :12, 'grapes' :13, 'watermelon' :14, 'muskmelon' :15, 'apple' :16,
       'orange' :17, 'papaya' :18, 'coconut' :19, 'cotton' :20, 'jute' :21, 'coffee' :22

}

#mapping the dictionary
crop['crop_no'] = crop['label'].map(crop_dict)
crop.head()

crop.tail()